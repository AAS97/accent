name: CI

on: push

jobs:
  test:
    runs-on: ubuntu-22.04

    services:
      db:
        image: postgres:10
        env:
          POSTGRES_DB: accent_test
          POSTGRES_PASSWORD: password
        ports: ['5432:5432']
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    env:
      MIX_ENV: test
      DATABASE_URL: postgres://postgres:password@localhost/accent_test

    steps:
      - uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - uses: erlef/setup-beam@v1
        id: setup-beam
        with:
          version-file: .tool-versions
          version-type: strict

      - uses: actions/cache@v3
        with:
          path: |
            deps
            _build
            priv/plts
          key: ${{ runner.os }}-mix-${{ steps.setup-beam.outputs.otp-version }}-${{ steps.setup-beam.outputs.elixir-version }}-${{ hashFiles(format('{0}/mix.lock', github.workspace)) }}

      - uses: actions/setup-node@v3
        with:
          node-version-file: .tool-versions
          cache: npm
          cache-dependency-path: |
            package-lock.json
            cli/package-lock.json
            jipt/package-lock.json
            webapp/package-lock.json

      - name: Install System Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc libyaml-dev

      - name: Install Elixir Dependencies
        run: |
          mix local.rebar --force
          mix local.hex --force
          mix deps.get
          mix deps.compile

      - name: Install NodeJS Dependencies
        run: |
          npm config set spin false
          npm ci --no-audit --no-color
          npm ci --prefix webapp --no-audit --no-color
          npm ci --prefix cli --no-audit --no-color
          npm ci --prefix jipt --no-audit --no-color

      - name: Build webapp production
        run: npm run build-production-inline --prefix webapp

      - name: Run Tests
        run: |
          mix ecto.setup
          ./priv/scripts/ci-check.sh

      - name: Build CLI
        run: npm --prefix cli run build
      - name: Build JIPT
        run: npm --prefix jipt run build-production-inline
      
      - uses: docker/build-push-action@v5
        with:
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/arm64
          context: .
          load: true
          push: false
